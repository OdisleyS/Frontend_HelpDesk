"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; }\n/* harmony export */ });\n// src/lib/api.ts\n// URL base da API - sem fallback, apenas do arquivo .env.local\nconst API_URL = \"https://helpdesk-ovf7.onrender.com\";\n// Verificação para garantir que a variável de ambiente esteja configurada\nif (!API_URL) {\n    console.error(\"ERRO: A vari\\xe1vel de ambiente NEXT_PUBLIC_API_URL n\\xe3o est\\xe1 configurada no arquivo .env.local\");\n}\n/**\r\n * Cliente de API para comunicação com o backend\r\n */ class ApiClient {\n    /**\r\n   * Configuração básica para requisições\r\n   */ async fetchJson(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseUrl).concat(endpoint);\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            ...options.headers\n        };\n        const response = await fetch(url, {\n            ...options,\n            headers,\n            credentials: \"include\"\n        });\n        // Se a resposta não for ok, lança um erro com mensagem apropriada\n        if (!response.ok) {\n            let errorMessage = \"Ocorreu um erro na requisi\\xe7\\xe3o\";\n            try {\n                const errorData = await response.json();\n                errorMessage = errorData.message || errorData || errorMessage;\n            } catch (e) {\n            // Se não conseguir parsear o JSON, usa a mensagem padrão\n            }\n            throw {\n                message: errorMessage,\n                status: response.status\n            };\n        }\n        // Se a resposta for 204 No Content, retorna null\n        if (response.status === 204) {\n            return null;\n        }\n        // Se for uma resposta de texto simples\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType && contentType.includes(\"text/plain\")) {\n            const text = await response.text();\n            return text;\n        }\n        // Caso contrário, tenta parsear como JSON\n        return await response.json();\n    }\n    /**\r\n   * Configura o token JWT para requisições autenticadas\r\n   */ getAuthHeaders(token) {\n        return {\n            \"Authorization\": \"Bearer \".concat(token)\n        };\n    }\n    constructor(){\n        var _this = this;\n        /**\r\n   * API de autenticação\r\n   */ this.auth = {\n            /**\r\n     * Realiza o login do usuário\r\n     */ login: async (data)=>{\n                return this.fetchJson(\"/auth/login\", {\n                    method: \"POST\",\n                    body: JSON.stringify(data)\n                });\n            },\n            /**\r\n     * Registra um novo usuário\r\n     */ register: async (data)=>{\n                return this.fetchJson(\"/auth/register\", {\n                    method: \"POST\",\n                    body: JSON.stringify(data)\n                });\n            },\n            /**\r\n     * Verifica o código enviado por email\r\n     */ verifyCode: async (data)=>{\n                return this.fetchJson(\"/auth/verify-code\", {\n                    method: \"POST\",\n                    body: JSON.stringify(data)\n                });\n            }\n        };\n        /**\r\n   * API protegida que requer autenticação\r\n   */ this.protected = {\n            /**\r\n     * Obtém os dados do usuário logado\r\n     */ getUserProfile: async (token)=>{\n                // Note: Precisamos implementar este endpoint no backend\n                return this.fetchJson(\"/api/v1/user/profile\", {\n                    headers: this.getAuthHeaders(token)\n                });\n            },\n            /**\r\n     * Lista as categorias\r\n     */ getCategories: async (token)=>{\n                return this.fetchJson(\"/api/v1/categories\", {\n                    headers: this.getAuthHeaders(token)\n                });\n            },\n            /**\r\n     * Lista os tickets por status\r\n     */ getTicketsByStatus: async function(token, status) {\n                let page = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, size = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 10;\n                return _this.fetchJson(\"/api/v1/tickets?status=\".concat(status, \"&page=\").concat(page, \"&size=\").concat(size), {\n                    headers: _this.getAuthHeaders(token)\n                });\n            }\n        };\n        // Forçar o uso apenas da variável de ambiente\n        if (!API_URL) {\n            throw new Error(\"A vari\\xe1vel de ambiente NEXT_PUBLIC_API_URL n\\xe3o est\\xe1 configurada\");\n        }\n        this.baseUrl = API_URL;\n    }\n}\n// Exporta uma instância única do cliente de API\nconst api = new ApiClient();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});