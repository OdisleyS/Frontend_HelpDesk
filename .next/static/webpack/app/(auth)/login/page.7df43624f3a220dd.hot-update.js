"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(auth)/login/page",{

/***/ "(app-pages-browser)/./src/context/auth-context.tsx":
/*!**************************************!*\
  !*** ./src/context/auth-context.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jwt-decode */ \"(app-pages-browser)/./node_modules/jwt-decode/build/esm/index.js\");\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/api */ \"(app-pages-browser)/./src/lib/api.ts\");\n// src/context/auth-context.tsx\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n// Criação do contexto\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Estado inicial\nconst initialState = {\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    isLoading: true\n};\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialState);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [successMessage, setSuccessMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Limpar erro\n    const clearError = ()=>setError(null);\n    // Limpar mensagem de sucesso\n    const clearSuccess = ()=>setSuccessMessage(null);\n    // Efeito para verificar se o usuário está autenticado ao carregar a página\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const checkAuth = async ()=>{\n            try {\n                // Recupera o token do localStorage\n                const token = localStorage.getItem(\"token\");\n                if (!token) {\n                    setState({\n                        ...initialState,\n                        isLoading: false\n                    });\n                    return;\n                }\n                // Decodifica o token para obter os dados do usuário\n                const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_3__.jwtDecode)(token);\n                // Verifica se o token expirou\n                if (decoded.exp * 1000 < Date.now()) {\n                    localStorage.removeItem(\"token\");\n                    setState({\n                        ...initialState,\n                        isLoading: false\n                    });\n                    return;\n                }\n                // Simula obtenção do perfil do usuário a partir do token\n                // No mundo real, você faria uma chamada para /api/v1/user/profile\n                const userData = {\n                    email: decoded.sub,\n                    tipo: \"CLIENTE\",\n                    nome: decoded.sub.split(\"@\")[0] // Nome simplificado a partir do email\n                };\n                setState({\n                    user: userData,\n                    token,\n                    isAuthenticated: true,\n                    isLoading: false\n                });\n            } catch (error) {\n                console.error(\"Erro ao verificar autentica\\xe7\\xe3o:\", error);\n                localStorage.removeItem(\"token\");\n                setState({\n                    ...initialState,\n                    isLoading: false\n                });\n            }\n        };\n        checkAuth();\n    }, []);\n    // Login\n    const login = async (data)=>{\n        try {\n            clearError();\n            clearSuccess();\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: true\n                }));\n            const response = await _lib_api__WEBPACK_IMPORTED_MODULE_4__.api.auth.login(data);\n            // Salva o token no localStorage\n            localStorage.setItem(\"token\", response.token);\n            // Decodifica o token para obter os dados do usuário\n            const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_3__.jwtDecode)(response.token);\n            // Simula dados do usuário\n            const userData = {\n                email: decoded.sub,\n                tipo: \"CLIENTE\",\n                nome: decoded.sub.split(\"@\")[0] // Nome simplificado a partir do email\n            };\n            setState({\n                user: userData,\n                token: response.token,\n                isAuthenticated: true,\n                isLoading: false\n            });\n            // Navega para o dashboard\n            router.push(\"/dashboard\");\n        } catch (err) {\n            const apiError = err;\n            setError({\n                message: apiError.message || \"Falha ao fazer login. Verifique suas credenciais.\",\n                status: apiError.status || 400\n            });\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: false\n                }));\n        }\n    };\n    // Registro\n    const register = async (data)=>{\n        try {\n            clearError();\n            clearSuccess();\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: true\n                }));\n            const response = await _lib_api__WEBPACK_IMPORTED_MODULE_4__.api.auth.register(data);\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: false\n                }));\n            // Define a mensagem de sucesso\n            setSuccessMessage(\"C\\xf3digo enviado para seu email. Verifique sua caixa de entrada.\");\n            // Navega para a página de verificação com o email como parâmetro\n            router.push(\"/verify?email=\".concat(encodeURIComponent(data.email)));\n            return response;\n        } catch (err) {\n            const apiError = err;\n            setError({\n                message: apiError.message || \"Erro no registro. Tente novamente.\",\n                status: apiError.status || 400\n            });\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: false\n                }));\n            throw apiError;\n        }\n    };\n    // Verificação\n    const verify = async (data)=>{\n        try {\n            clearError();\n            clearSuccess();\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: true\n                }));\n            const response = await _lib_api__WEBPACK_IMPORTED_MODULE_4__.api.auth.verifyCode(data);\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: false\n                }));\n            // Define a mensagem de sucesso\n            setSuccessMessage(\"Conta verificada com sucesso! Agora voc\\xea pode fazer login.\");\n            // Navega para a página de login\n            router.push(\"/login\");\n            return response;\n        } catch (err) {\n            const apiError = err;\n            setError({\n                message: apiError.message || \"C\\xf3digo inv\\xe1lido ou expirado. Tente novamente.\",\n                status: apiError.status || 400\n            });\n            setState((prev)=>({\n                    ...prev,\n                    isLoading: false\n                }));\n            throw apiError;\n        }\n    };\n    // Logout\n    const logout = ()=>{\n        localStorage.removeItem(\"token\");\n        setState({\n            ...initialState,\n            isLoading: false\n        });\n        router.push(\"/login\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            ...state,\n            login,\n            register,\n            verify,\n            logout,\n            error,\n            successMessage,\n            clearError,\n            clearSuccess\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\odisl\\\\Videos\\\\projeto_integrador2\\\\frontend\\\\Frontend_HelpDesk\\\\src\\\\context\\\\auth-context.tsx\",\n        lineNumber: 204,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"qF11DoGklhCDlS/JnexRdL8EIPU=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = AuthProvider;\n// Hook para usar o contexto de autenticação\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth deve ser usado dentro de um AuthProvider\");\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/auth-context.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; }\n/* harmony export */ });\n// src/lib/api.ts\n// URL base da API - agora apontando para o Render\nconst API_URL = \"https://helpdesk-ovf7.onrender.com\" || 0;\n/**\r\n * Cliente de API para comunicação com o backend\r\n */ class ApiClient {\n    /**\r\n   * Configuração básica para requisições\r\n   */ async fetchJson(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseUrl).concat(endpoint);\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            ...options.headers\n        };\n        const response = await fetch(url, {\n            ...options,\n            headers,\n            credentials: \"include\"\n        });\n        // Se a resposta não for ok, lança um erro com mensagem apropriada\n        if (!response.ok) {\n            let errorMessage = \"Ocorreu um erro na requisi\\xe7\\xe3o\";\n            try {\n                const errorData = await response.json();\n                errorMessage = errorData.message || errorData || errorMessage;\n            } catch (e) {\n            // Se não conseguir parsear o JSON, usa a mensagem padrão\n            }\n            throw {\n                message: errorMessage,\n                status: response.status\n            };\n        }\n        // Se a resposta for 204 No Content, retorna null\n        if (response.status === 204) {\n            return null;\n        }\n        // Se for uma resposta de texto simples\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType && contentType.includes(\"text/plain\")) {\n            const text = await response.text();\n            return text;\n        }\n        // Caso contrário, tenta parsear como JSON\n        return await response.json();\n    }\n    /**\r\n   * Configura o token JWT para requisições autenticadas\r\n   */ getAuthHeaders(token) {\n        return {\n            \"Authorization\": \"Bearer \".concat(token)\n        };\n    }\n    constructor(baseUrl = API_URL){\n        var _this = this;\n        /**\r\n   * API de autenticação\r\n   */ this.auth = {\n            /**\r\n     * Realiza o login do usuário\r\n     */ login: async (data)=>{\n                return this.fetchJson(\"/auth/login\", {\n                    method: \"POST\",\n                    body: JSON.stringify(data)\n                });\n            },\n            /**\r\n     * Registra um novo usuário\r\n     */ register: async (data)=>{\n                return this.fetchJson(\"/auth/register\", {\n                    method: \"POST\",\n                    body: JSON.stringify(data)\n                });\n            },\n            /**\r\n     * Verifica o código enviado por email\r\n     */ verifyCode: async (data)=>{\n                return this.fetchJson(\"/auth/verify-code\", {\n                    method: \"POST\",\n                    body: JSON.stringify(data)\n                });\n            }\n        };\n        /**\r\n   * API protegida que requer autenticação\r\n   */ this.protected = {\n            /**\r\n     * Obtém os dados do usuário logado\r\n     */ getUserProfile: async (token)=>{\n                // Note: Precisamos implementar este endpoint no backend\n                return this.fetchJson(\"/api/v1/user/profile\", {\n                    headers: this.getAuthHeaders(token)\n                });\n            },\n            /**\r\n     * Lista as categorias\r\n     */ getCategories: async (token)=>{\n                return this.fetchJson(\"/api/v1/categories\", {\n                    headers: this.getAuthHeaders(token)\n                });\n            },\n            /**\r\n     * Lista os tickets por status\r\n     */ getTicketsByStatus: async function(token, status) {\n                let page = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, size = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 10;\n                return _this.fetchJson(\"/api/v1/tickets?status=\".concat(status, \"&page=\").concat(page, \"&size=\").concat(size), {\n                    headers: _this.getAuthHeaders(token)\n                });\n            }\n        };\n        this.baseUrl = baseUrl;\n    }\n}\n// Exporta uma instância única do cliente de API\nconst api = new ApiClient();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});